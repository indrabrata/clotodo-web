{"version":3,"sources":["clotodo_web/state.cljs"],"mappings":";AAGA,GAAA,QAAAA,wCAAAC,8CAAAC;AAAA;AAAA,AAAA,AAASC,0BAAM,gDAAA,hDAACC;;AAChB,GAAA,QAAAJ,wCAAAC,8CAAAI;AAAA;AAAA,AAAA,AAASC,yBAAK,gDAAA,hDAACF;;AACf,GAAA,QAAAJ,wCAAAC,8CAAAM;AAAA;AAAA,AAAA,AAASC,iCAAa,gDAAA,hDAACJ;;AACvB,GAAA,QAAAJ,wCAAAC,8CAAAQ;AAAA;AAAA,AAAA,AAASC,iCAAa,gDAAA,hDAACN;;AACvB,GAAA,QAAAJ,wCAAAC,8CAAAU;AAAA;AAAA,AAAA,AAASC,0BAAM,gDAAA,hDAACR;;AAChB,GAAA,QAAAJ,wCAAAC,8CAAAY;AAAA;AAAA,AAAA,AAASC,0BAAM,gDAAA,hDAACV;;AAEhB,qCAAA,rCAAMW,kFAAaC,EAAEC;AAArB,AACE,AAACC,sBAAOf,wBAAMa;;AACd,AAACE,sBAAOZ,uBAAKW;;AACb,qBAAA,rBAAUE,6BAAwBH;;AAClC,4BAAA,rBAAUG,4BAAuB,AAAYC,eAAQ,AAACC,qBAAQJ;;AAEhE,qCAAA,rCAAMK;AAAN,AACE,IAAAC,qBAAa,qBAAA,rBAAUJ;AAAvB,AAAA,oBAAAI;AAAA,AAAA,QAAAA,JAAWP;AAAX,AACE,IAAAO,yBAAa,qBAAA,rBAAUJ;AAAvB,AAAA,oBAAAI;AAAA,AAAA,QAAAA,JAAWN;AAAX,AACE,AAACC,sBAAOf,wBAAMa;;AACd,OAACE,sBAAOZ,uBAAK,0HAAA,2EAAA,rMAACkB,0DAAQ,AAAQJ,WAAQH;;AAFxC;;;AADF;;;AAKF,iCAAA,jCAAMQ;AAAN,AACC,8CAAA,9CAACP,sBAAOf;;AACR,6CAAA,7CAACe,sBAAOZ;;AACR,wBAAA,xBAAaa;;AACb,+BAAA,xBAAaA","names":["js/clotodo-web","js/clotodo-web.state","js/clotodo-web.state.token","clotodo-web.state/token","reagent.core.atom","js/clotodo-web.state.user","clotodo-web.state/user","js/clotodo-web.state.current-page","clotodo-web.state/current-page","js/clotodo-web.state.current-room","clotodo-web.state/current-room","js/clotodo-web.state.rooms","clotodo-web.state/rooms","js/clotodo-web.state.error","clotodo-web.state/error","clotodo-web.state/save-token!","t","u","cljs.core/reset!","js/localStorage","js/JSON","cljs.core/clj->js","clotodo-web.state/load-token!","temp__5823__auto__","cljs.core.js__GT_clj","clotodo-web.state/logout!"],"sourcesContent":["(ns clotodo-web.state\n  (:require [reagent.core :as r]))\n\n(defonce token (r/atom nil))\n(defonce user (r/atom nil))\n(defonce current-page (r/atom :dashboard))\n(defonce current-room (r/atom nil))\n(defonce rooms (r/atom []))\n(defonce error (r/atom nil))\n\n(defn save-token! [t u]\n  (reset! token t)\n  (reset! user u)\n  (.setItem js/localStorage \"token\" t)\n  (.setItem js/localStorage \"user\" (.stringify js/JSON (clj->js u))))\n\n(defn load-token! []\n  (when-let [t (.getItem js/localStorage \"token\")]\n    (when-let [u (.getItem js/localStorage \"user\")]\n      (reset! token t)\n      (reset! user (js->clj (.parse js/JSON u) :keywordize-keys true)))))\n\n(defn logout! []\n (reset! token nil)\n (reset! user nil)\n (.removeItem js/localStorage \"token\")\n (.removeItem js/localStorage \"user\"))\n\n"]}