{"version":3,"sources":["clotodo_web/api.cljs"],"mappings":";AAIA,0BAAA,1BAAKA;AAGL,yBAAA,zBAAMC,0DAAQC,MAAMC,SAASC,SAASC;AAAtC,AACE,+JAAA,2CAAA,wDAAA,2CAAA,6DAAA,sEAAA,6EAAA,0DAAA,qDAAA,2EAAA,qDAAA,8DAAA,KAAA,oEAAA,uEAAA,n7BAACC,oDAAK,yBAAA,xBAAKN,wSACQE,mEAAgBC,qEAAmBC,8XAI1CC;AALZ,AAMmB,qDAAA,9CAACE,sBAAOC;;;AAE7B,yBAAA,zBAAMC,0DAAQP,MAAME,SAASC;AAA7B,AACE,+JAAA,2CAAA,wDAAA,2CAAA,6DAAA,6EAAA,0DAAA,qDAAA,2EAAA,qDAAA,8DAAA,KAAA,oEAAA,uEAAA,72BAACC,oDAAK,yBAAA,xBAAKN,wSACQE,kEAAgBE,8XAIvBC;AALZ,AAMmB,qDAAA,9CAACE,sBAAOC","names":["clotodo-web.api/api-url","clotodo-web.api/signup","email","username","password","callback","ajax.core.POST","cljs.core/reset!","clotodo-web.state/error","clotodo-web.api/signin"],"sourcesContent":["(ns clotodo-web.api\n  (:require [clotodo-web.state :as state]\n            [ajax.core :refer [POST]]))\n\n(def api-url \"http://localhost:3000/api\")\n\n\n(defn signup [email username password callback]\n  (POST (str api-url \"/auth/signup\")\n    {:params {:email email :username username :password password}\n     :format :json\n     :response-format :json\n     :keywords? true\n     :handler callback\n     :error-handler #(reset! state/error \"Signup failed\")}))\n\n(defn signin [email password callback]\n  (POST (str api-url \"/auth/signin\")\n    {:params {:email email :password password}\n     :format :json\n     :response-format :json\n     :keywords? true\n     :handler callback\n     :error-handler #(reset! state/error \"Invalid credentials\")}))\n"]}