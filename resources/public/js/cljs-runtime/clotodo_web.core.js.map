{"version":3,"sources":["clotodo_web/core.cljs"],"mappings":";AAQA,uBAAA,vBAAMA;AAAN,AACE,mBAAA,AAAAC,fAAMC,+BAAcC;YAApB,AAAAF,RACMG,wBAAOC;AADb,AAAA,0FAAA,0DAGG,mBAAA,4HAAA,6HAAA,sIAAA,AAAA,hZACE,UAAA,TAAMD,mGAAQE,2CACd,0DAAA,1DAACC,6CAAEL,iKAA0BM,sIACtBA;;;AAEd,8BAAA,9BAAeC;AAAf,AACE,AAACC;;AACD,AAACC;;AACD,wDAAA,jDAACC,oIAAaZ,6BAAK,wBAAA,xBAAiBa","names":["clotodo-web.core/app","cljs.core/deref","current-page","clotodo-web.state/current-page","token","clotodo-web.state/token","clotodo-web.views.auth/auth-page","cljs.core._EQ_","clotodo-web.views.dashboard/dashboard-page","clotodo-web.core/init!","clotodo-web.router/init!","clotodo-web.state/load-token!","reagent.dom.render","js/document"],"sourcesContent":["(ns clotodo-web.core\n  (:require\n   [clotodo-web.router :as router]\n   [clotodo-web.state :as state]\n   [clotodo-web.views.auth :as auth]\n   [clotodo-web.views.dashboard :as dashboard]\n   [reagent.dom :as rdom]))\n\n(defn app []\n  (let [current-page @state/current-page\n        token @state/token]\n    [:div.app\n     (cond\n       (nil? token) [auth/auth-page]\n       (= current-page :dashboard) [dashboard/dashboard-page]\n       :else [dashboard/dashboard-page])]))\n\n(defn ^:export init! []\n  (router/init!)\n  (state/load-token!)\n  (rdom/render [app] (.getElementById js/document \"app\")))"]}